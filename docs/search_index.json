[["index.html", "NSDAP members in the German Bundestag Chapter 1 General Information 1.1 Structure and Idea 1.2 Contact Information", " NSDAP members in the German Bundestag Daniel Kuhlen 2023-02-10 Chapter 1 General Information After World War II and the defeat of Nazi Germany, the Allies were tasked with the rebuilding of the German state. This included a program of denazification aimed at removing former members of the National Socialist German Workers’ Party (NSDAP) from positions of power and influence. Denazification was seen as a critical step in preventing the resurgence of Nazi ideology and ensuring accountability for the actions of those who had supported the Nazi regime. As part of the denazification process, laws were introduced that banned NSDAP members from holding public office and participating in the political process. Despite these efforts, some former NSDAP members were able to re-enter public life in the post-war period, including by becoming members of the German Parliament (Bundestag) after 1949. In this project, we will focus on analyzing the representation of former NSDAP members in the German Parliament (Bundestag) following the end of Nazi rule in Germany. Our analysis is limited to known NSDAP members and may not fully capture the presence of former members who were able to conceal their past. Additionally, our analysis is limited to the Bundestag and we cannot make any assumptions about the representation of former NSDAP members in other positions of power. It is important to consider the potential limitations of our data when interpreting the results of our analysis. Despite these limitations, our goal is to gain insight into the representation of former NSDAP members in the German Parliament and to contribute to a better understanding of the challenges and complexities of the denazification process. 1.1 Structure and Idea The aim of this project is to deliver comprehensive and well-organized datasets, as well as data visualization tools, related to the former members of the National Socialist German Workers’ Party (NSDAP) in the German Bundestag. The datasets can be accessed in either RDS or CSV formats, and they are free to use. However, proper citation is required if used. This project emphasizes transparency, which is why the code used to create the datasets is also included in the book. All files are saved in the respective Github repository for replication. 1.2 Contact Information If you have any question I am happy to help you out. Daniel Kuhlen: daniel.kuhlen@gmx.de "],["data.html", "Chapter 2 Data 2.1 Data Source 2.2 Data Scraping and Wrangling", " Chapter 2 Data 2.1 Data Source The data used for this project is based on different Wikipedia Articles. In detail following url’s: https://de.wikipedia.org/wiki/Liste_ehemaliger_NSDAP-Mitglieder,_die_nach_Mai_1945_politisch_t%C3%A4tig_waren https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(1._Wahlperiode) https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(2._Wahlperiode) https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(3._Wahlperiode) https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(4._Wahlperiode) https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(5._Wahlperiode) https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(6._Wahlperiode) 2.2 Data Scraping and Wrangling 2.2.1 Bundestag Member This code is a script for web scraping and data wrangling in R. It collects data on members of the German Bundestag from different election periods and cleans the data into a tidy format. The code uses the “tidyverse” and “rvest” packages to perform the web scraping and data manipulation. The script starts by scraping data from Wikipedia for the first election period, the first Bundestag (1.WP). It starts by setting the URL for the relevant Wikipedia page and reading the HTML content of the page. Then, it selects the desired table from the HTML content and extracts the relevant information from the table, including the links for the names of the members in the first column. The extracted data is then cleaned and transformed into a tidy format, with columns for the member’s name, birth/death information, party affiliation, state, constituency, vote share, comments, and the election period. The script repeats this process for the second, third, and fourth, fifth and sixth election periods, with each iteration scraping data from a different Wikipedia page and cleaning the data into a tidy format with the same columns. # packages --------------------------------------------------------------------- library(tidyverse) library(rvest) ################################## 1.WP ######################################## # 1) web scraping -------------------------------------------------------------- url = &quot;https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(1._Wahlperiode)&quot; html = read_html(url) html %&gt;% html_nodes(css = &quot;table&quot;) table_node &lt;- html %&gt;% html_nodes(css = &quot;table&quot;) %&gt;% nth(5) # Extract the data from the table node table_data &lt;- table_node %&gt;% html_table(fill = TRUE) # Extract the links for the names in the first column of the table table_data$links &lt;- html_attr(table_node %&gt;% html_nodes(&quot;td:nth-child(1) a&quot;), &quot;href&quot;) rm(html, table_node, url) # 2) data wrangling ------------------------------------------------------------ firstbt &lt;- table_data %&gt;% rename(name = `Mitglied des Bundestages`, birth_death = `Lebens-daten`, party = Partei, state = `Bundesland/ Landesliste`, constituency = Wahlkreis, voteshare = `Stimmen in %`, comment = Bemerkungen, wikitag = links) firstbt &lt;- firstbt %&gt;% select(name, wikitag, birth_death, party, state, constituency, voteshare, comment) %&gt;% mutate(legperiod = 1) ################################## 2.WP ######################################## # 1) web scraping -------------------------------------------------------------- url = &quot;https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(2._Wahlperiode)&quot; html = read_html(url) html %&gt;% html_nodes(css = &quot;table&quot;) table_node &lt;- html %&gt;% html_nodes(css = &quot;table&quot;) %&gt;% nth(3) # Extract the data from the table node table_data &lt;- table_node %&gt;% html_table(fill = TRUE) # Extract the links for the names in the first column of the table table_data$links &lt;- html_attr(table_node %&gt;% html_nodes(&quot;td:nth-child(1) a&quot;), &quot;href&quot;) rm(html, table_node, url) # 2) data wrangling ------------------------------------------------------------ secondbt &lt;- table_data %&gt;% rename(name = `Mitglied des Bundestages`, birth_death = `Lebens-daten`, party = Partei, state = `Bundesland/ Landesliste`, constituency = Wahlkreis, voteshare = `Erst-stimmen in %`, comment = Bemerkungen, wikitag = links) secondbt &lt;- secondbt %&gt;% select(name, wikitag, birth_death, party, state, constituency, voteshare, comment) %&gt;% mutate(legperiod = 2) ################################## 3.WP ######################################## # 1) web scraping -------------------------------------------------------------- url = &quot;https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(3._Wahlperiode)&quot; html = read_html(url) html %&gt;% html_nodes(css = &quot;table&quot;) table_node &lt;- html %&gt;% html_nodes(css = &quot;table&quot;) %&gt;% nth(4) # Extract the data from the table node table_data &lt;- table_node %&gt;% html_table(fill = TRUE) # Extract the links for the names in the first column of the table table_data$links &lt;- html_attr(table_node %&gt;% html_nodes(&quot;td:nth-child(1) a&quot;), &quot;href&quot;) rm(html, table_node, url) # 2) data wrangling ------------------------------------------------------------ thirdbt &lt;- table_data %&gt;% rename(name = `Mitglied des Bundestages`, birth_death = `Lebensdaten`, party = Partei, state = `Bundesland/ Landesliste`, constituency = Wahlkreis, voteshare = `Erst-stimmen in %`, comment = Bemerkungen, wikitag = links) thirdbt &lt;- thirdbt %&gt;% select(name, wikitag, birth_death, party, state, constituency, voteshare, comment) %&gt;% mutate(legperiod = 3) ################################## 4.WP ######################################## # 1) web scraping -------------------------------------------------------------- url = &quot;https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(4._Wahlperiode)&quot; html = read_html(url) html %&gt;% html_nodes(css = &quot;table&quot;) table_node &lt;- html %&gt;% html_nodes(css = &quot;table&quot;) %&gt;% nth(2) # Extract the data from the table node table_data &lt;- table_node %&gt;% html_table(fill = TRUE) # Extract the links for the names in the first column of the table table_data$links &lt;- html_attr(table_node %&gt;% html_nodes(&quot;td:nth-child(1) a&quot;), &quot;href&quot;) rm(html, table_node, url) # 2) data wrangling ------------------------------------------------------------ fourthbt &lt;- table_data %&gt;% rename(name = `Mitglied des Bundestages`, birth_death = `Lebensdaten`, party = Partei, state = `Bundesland/ Landesliste`, constituency = Wahlkreis, voteshare = `Erst-stimmen in %`, comment = Bemerkungen, wikitag = links) fourthbt &lt;- fourthbt %&gt;% select(name, wikitag, birth_death, party, state, constituency, voteshare, comment) %&gt;% mutate(legperiod = 4) ################################## 5.WP ######################################## # 1) web scraping -------------------------------------------------------------- url = &quot;https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(5._Wahlperiode)&quot; html = read_html(url) html %&gt;% html_nodes(css = &quot;table&quot;) table_node &lt;- html %&gt;% html_nodes(css = &quot;table&quot;) %&gt;% nth(2) # Extract the data from the table node table_data &lt;- table_node %&gt;% html_table(fill = TRUE) # Extract the links for the names in the first column of the table table_data$links &lt;- html_attr(table_node %&gt;% html_nodes(&quot;td:nth-child(1) a&quot;), &quot;href&quot;) rm(html, table_node, url) # 2) data wrangling ------------------------------------------------------------ fifthbt &lt;- table_data %&gt;% rename(name = `Mitglied des Bundestages`, birth_death = `Lebens-daten`, party = Partei, state = `Bundesland/ Landesliste`, constituency = Wahlkreis, voteshare = `Erst-stimmen in %`, comment = Bemerkungen, wikitag = links) fifthbt &lt;- fifthbt %&gt;% select(name, wikitag, birth_death, party, state, constituency, voteshare, comment) %&gt;% mutate(legperiod = 5) # recode SPD (GDP) and CSU (GDP) as SPD and CSU # the four members of the GDP party were guests in the fraction of the SPD or CSU # and therefore coded as members of their fraction fifthbt &lt;- fifthbt %&gt;% mutate(party = recode(party, &quot;SPD (GDP)&quot; = &quot;SPD&quot;, &quot;CSU (GDP)&quot; = &quot;CSU&quot;)) ################################## 6.WP ######################################## # 1) web scraping -------------------------------------------------------------- url = &quot;https://de.wikipedia.org/wiki/Liste_der_Mitglieder_des_Deutschen_Bundestages_(6._Wahlperiode)&quot; html = read_html(url) html %&gt;% html_nodes(css = &quot;table&quot;) table_node &lt;- html %&gt;% html_nodes(css = &quot;table&quot;) %&gt;% nth(2) # Extract the data from the table node table_data &lt;- table_node %&gt;% html_table(fill = TRUE) # Extract the links for the names in the first column of the table table_data$links &lt;- html_attr(table_node %&gt;% html_nodes(&quot;td:nth-child(1) a&quot;), &quot;href&quot;) rm(html, table_node, url) # 2) data wrangling ------------------------------------------------------------ sixthbt &lt;- table_data %&gt;% rename(name = `Mitglied des Bundestages`, birth_death = `Lebens-daten`, party = Partei, state = `Bundesland/ Landesliste`, constituency = Wahlkreis, voteshare = `Erst-stimmen in %`, comment = Bemerkungen, wikitag = links) sixthbt &lt;- sixthbt %&gt;% select(name, wikitag, birth_death, party, state, constituency, voteshare, comment) %&gt;% mutate(legperiod = 6) In the end, all the tidied data is combined into a single data frame, making it easy to analyze and work with the collected information on the members of the German Bundestag across multiple election periods. ######################### member complete ###################################### df_list &lt;- list(firstbt, secondbt, thirdbt, fourthbt, fifthbt, sixthbt) btmember &lt;- do.call(rbind, df_list) rm(df_list, table_data) saveRDS(btmember, file = &quot;btmember.RDS&quot;) 2.2.2 Former NSDAP members This code is a web scraper that gathers information about former members of the National Socialist German Workers’ Party (NSDAP) who were politically active after May 1945. The first part of the code uses the rvest library to scrape a table from a Wikipedia page and convert it into a data frame. The second part of the code performs data cleaning and manipulation tasks such as splitting columns, removing unnecessary characters, and replacing empty values with NA. Finally, the columns are renamed and the data is saved as an RDS file for future use. # Packages --------------------------------------------------------------------- library(tidyverse) library(rvest) library(stringr) library(writexl) # 1) Web-Scraping -------------------------------------------------------------- # liste brd url &lt;- &quot;https://de.wikipedia.org/wiki/Liste_ehemaliger_NSDAP-Mitglieder,_die_nach_Mai_1945_politisch_t%C3%A4tig_waren&quot; # Read the HTML content of the URL html_content &lt;- read_html(url) # Extract the table table_html &lt;- html_content %&gt;% html_nodes(&quot;table&quot;) %&gt;% .[[1]] # Convert the table to a data frame nazis.brd &lt;- table_html %&gt;% html_table(header = TRUE) rm(html_content, table_html, url) # liste brd wikitags url &lt;- &quot;https://de.wikipedia.org/wiki/Liste_ehemaliger_NSDAP-Mitglieder,_die_nach_Mai_1945_politisch_t%C3%A4tig_waren&quot; page &lt;- read_html(url) names_col &lt;- html_nodes(page, &quot;.wikitable td:nth-child(1) a&quot;) %&gt;% html_text() names_col &lt;- gsub(&quot;\\n&quot;, &quot;&quot;, names_col) links_col &lt;- html_nodes(page, &quot;.wikitable td:nth-child(1) a&quot;) %&gt;% html_attr(&quot;href&quot;) wikitags.brd &lt;- data.frame(name = names_col, links = links_col, stringsAsFactors = FALSE) %&gt;% distinct() rm(page, links_col, names_col, url) # 2) Data-Cleaning ------------------------------------------------------------- # left join wikitags nazis.brd &lt;- nazis.brd %&gt;% separate(Name, c(&quot;name&quot;, &quot;birth_death&quot;), &quot;\\\\(&quot;) %&gt;% distinct() %&gt;% left_join(wikitags.brd, by = &quot;name&quot;) # name, birthdate, deathdate clean nazis.brd &lt;- nazis.brd %&gt;% mutate(name = str_split(name, &quot;,&quot;) %&gt;% map_chr(~ paste(rev(.x), collapse = &quot; &quot;)), name = str_trim(name), birth_death = gsub(&quot;[()]&quot;, &quot;&quot;, birth_death), birth_death = str_replace(birth_death, &quot;-&quot;, &quot;&quot;), birthdate = str_sub(birth_death, 1, 4), deathdate = str_sub(birth_death, 6, 9)) nazis.brd[&quot;birth_death&quot;] &lt;- NULL # partymembership clean nazis.brd &lt;- nazis.brd %&gt;% mutate(partybrd = gsub(&quot;[0-9]+&quot;, &quot;&quot;, `Parteimitglied­schaften ab 1945`), partybrd = gsub(&quot;ab&quot;, &quot;&quot;, partybrd), partybrd = gsub(&quot;bis&quot;, &quot;&quot;, partybrd), partybrd = trimws(partybrd), partybrd = str_squish(partybrd)) # emptyvalues with na nazis.brd &lt;- nazis.brd %&gt;% mutate_all(~ifelse(as.character(.) == &quot;&quot;, NA, .)) # rename columns nazis.brd &lt;- nazis.brd %&gt;% rename(&quot;nsdap.membership&quot; = &quot;NSDAP&quot;, &quot;position&quot; = &quot;Amt/Ämter&quot;, &quot;wikitag&quot; = &quot;links&quot;) # columns correct order, delete unnecessary nazis.brd &lt;- nazis.brd %&gt;% select(name, wikitag, birthdate, deathdate, nsdap.membership, partybrd) # save rds saveRDS(nazis.brd, file = &quot;nazisparl.RDS&quot;) 2.2.3 Final Dataset This code performs data wrangling on two datasets nazis.brd and btmember. It selects relevant columns from both datasets and performs a left join operation to combine them into a single dataset btmembernazi. The newly created dataset has columns from both original datasets and contains information on the party, voteshare, and NSDAP membership for all parliamentarians in the first 6 electoral periods. The final result is saved in two formats, RDS and CSV, for future use. # datawrangling ---------------------------------------------------------------- nazis.merge &lt;- nazis.brd %&gt;% select(wikitag, nsdap.membership) btmember.merge &lt;- btmember %&gt;% select(name, wikitag, party, voteshare, legperiod) btmembernazi &lt;- left_join(btmember.merge, nazis.merge, by = &quot;wikitag&quot;) %&gt;% mutate(nsdap.membership = ifelse(is.na(nsdap.membership), 0, 1), party = ifelse(party == &quot;unabhängig&quot;, &quot;independent&quot;, party), voteshare = ifelse(voteshare == &quot;&quot;, NA, voteshare)) # save rds saveRDS(btmembernazi, file = &quot;btmembernazi.RDS&quot;) # save csv write.csv(btmembernazi, file = &quot;btmembernazi.csv&quot;) "],["data-visualization.html", "Chapter 3 Data Visualization 3.1 Data Wrangling 3.2 Former NSDAP by legislative period 3.3 Former NSDAP by party 3.4 Former NSDAP by party and legislative periods 3.5 Outlook", " Chapter 3 Data Visualization 3.1 Data Wrangling # packages --------------------------------------------------------------------- library(tidyverse) library(rio) # download data ---------------------------------------------------------------- nazisbrd &lt;- import(&quot;/Users/danielkuhlen/Desktop/privat/projekte/nazi.parlamente/nazisbrd.RDS&quot;) %&gt;% select(wikitag, nsdap.membership) btmember &lt;- import(&quot;btmember.RDS&quot;) %&gt;% select(name, wikitag, party, voteshare, legperiod) # datawrangling ---------------------------------------------------------------- btmembernazi &lt;- left_join(btmember, nazisbrd, by = &quot;wikitag&quot;) %&gt;% mutate(nsdap.membership = ifelse(is.na(nsdap.membership), 0, 1), party = ifelse(party == &quot;unabhängig&quot;, &quot;independent&quot;, party), voteshare = ifelse(voteshare == &quot;&quot;, NA, voteshare)) 3.2 Former NSDAP by legislative period # datavisualization ----------------------------------------------------------- # 1) Percentage of NSDAP members per legislative periode btmembernazi %&gt;% group_by(legperiod) %&gt;% count(nsdap.membership) %&gt;% mutate(percent = n / sum(n), nsdap.membership = factor(nsdap.membership, levels = c(&quot;0&quot;, &quot;1&quot;), labels = c(&quot;Not a member&quot;, &quot;Member&quot;))) %&gt;% ggplot(aes(x = legperiod, y = percent, fill = nsdap.membership)) + geom_bar(stat = &quot;identity&quot;, position = position_dodge(width = .5)) + labs(x = &quot;&quot;, y = &quot;&quot;, title = &quot;Former NSDAP members in the German Bundestag&quot;, legend = &quot;&quot;) + guides(fill = guide_legend(title = NULL)) + scale_fill_manual(values = c(&quot;Not a member&quot; = &quot;#C0C0C0AA&quot;, &quot;Member&quot; = &quot;#823200&quot;)) + scale_x_discrete(limits = c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;), labels = c(&quot;1. BT&quot;, &quot;2. BT&quot;, &quot;3. BT&quot;, &quot;4. BT&quot;, &quot;5. BT&quot;, &quot;6. BT&quot;)) + scale_y_continuous(limits = c(0, 1), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9), labels = scales::percent) + theme_minimal() + theme(text=element_text(family=&quot;Times New Roman&quot;)) The data showing that between 4-10% of German Bundestag members during the first six legislative periods were former members of the National Socialist German Workers’ Party (NSDAP) provides important insight into post-World War II German politics. This highlights the persistence of political polarization and the ongoing challenges in the country’s process of democratization and denazification. The fact that a significant portion of the legislative body was composed of former NSDAP members, even in the years immediately following the end of the war, raises questions about the success of efforts to fully remove the influence of the Nazi party and promote democratic values in the country. 3.3 Former NSDAP by party # 2) Percentage NSDAP members by party btmembernazi %&gt;% filter(party != &quot;independent&quot;) %&gt;% group_by(party) %&gt;% summarize(total_members = n(), nsdap_members = sum(nsdap.membership == 1), nsdap_percent = nsdap_members/total_members) %&gt;% arrange(desc(nsdap_percent)) %&gt;% ggplot(aes(x = reorder(party, nsdap_percent), y = nsdap_percent, fill = party)) + geom_col(fill = &quot;#823200EE&quot;, width = 0.65) + scale_y_continuous(limits = c(0, .5), breaks = c(0, 0.1, 0.2, 0.3, 0.4, 0.5), labels = scales::percent) + labs(x = &quot;&quot;, y = &quot;&quot;, title = &quot;Percentage NSDAP members by party&quot;) + scale_fill_discrete(name = &quot;Party&quot;, guide = &quot;none&quot;) + coord_flip() + theme_minimal() + theme(text=element_text(family=&quot;Times New Roman&quot;)) The second plot provides an analysis of the percentage of former NSDAP members in different political parties in the German Bundestag for the first 6 legislative periods. The data reveal that the right-wing parties were a catch basin for former NSDAP members and thereby provided an institutionalized oppprtunity for them to reproduce the nazi ideology in the bundestag. According to the data, the still relevant parties FDP, CDU, CSU and SPD all had some former members of the NSDAP in their ranks in the first six legislative periods of the German Bundestag. The FDP had a percentage of 15%, while the CDU had 7% and the CSU had 14%. Indicating that even these parties, which were not considered to be right-wing extremist, were riddled with nazis. However, the data shows that the SPD had a relatively low percentage of former NSDAP members among its ranks in the first six legislative periods of the German Bundestag, with only 2%. This low representation can be seen in the context of the SPD’s history during the Nazi period, as the party was banned and persecuted by the Nazi regime. Despite this repression, many SPD members continued to resist the Nazi regime. This history and the SPD’s political ideology, as a center-left party, was distinct from that of the NSDAP, which likely contributed to the lower representation of former NSDAP members in its ranks. 3.4 Former NSDAP by party and legislative periods # 3) Percentage NSDAP memmbers by party over time btmembernazi %&gt;% group_by(legperiod, party) %&gt;% summarize(total_members = n(), nsdap_members = sum(nsdap.membership == 1), nsdap_percent = nsdap_members/total_members) %&gt;% filter(party %in% c(&quot;GB/BHE&quot;, &quot;DPS&quot;, &quot;DKP-DRP&quot;, &quot;DP&quot;, &quot;FDP&quot;, &quot;CSU&quot;, &quot;CDU&quot;, &quot;SPD&quot;)) %&gt;% ggplot(aes(x=legperiod, y=nsdap_percent, color = party)) + geom_line() + geom_point() + scale_y_continuous(limits = c(0, .5), breaks = c(0, 0.1, 0.2, 0.3, 0.4, 0.5), labels = scales::percent) + scale_x_discrete(limits = c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;), labels = c(&quot;1949&quot;, &quot;1953&quot;, &quot;1957&quot;, &quot;1961&quot;, &quot;1965&quot;, &quot;1969&quot;)) + scale_color_manual(values = c(&quot;SPD&quot; = &quot;#E3000F&quot;, &quot;CDU&quot; = &quot;#000000&quot;, &quot;CSU&quot; = &quot;#0570C9&quot;, &quot;DKP-DRP&quot; = &quot;#5398BE&quot;, &quot;FDP&quot; = &quot;#FFEF00&quot;, &quot;DP&quot; = &quot;#73956F&quot;, &quot;DPS&quot; = &quot;#8A1C7C&quot;, &quot;GB/BHE&quot; = &quot;#F5853F&quot;)) + labs(x = &quot;&quot;, y = &quot;&quot;, title = &quot;Percentage former NSDAP members&quot;) + theme_minimal() + theme(text=element_text(family=&quot;Times New Roman&quot;)) The plot shows a gradual rise in the percentage of former members of the NSDAP in all major political parties (SPD, CDU, CSU, FDP) by 1960. This is contrary to the initial expectation that most ex-NSDAP members would have joined the first Bundestag. However, it appears that those with a history of NSDAP affiliation had greater ease in joining these parties as their crimes receded further into the past. Further research is needed to examine how this trend was influenced by specific policies, such as the statute of limitations for crimes which had expired by 1959 (Verjährung), or the decline in influence of the Allies. 3.5 Outlook This project aims to provide a preliminary understanding of the presence of former NSDAP members in the German Bundestag over time. While the goal is to present the data in a clean and usable format, and to provide some basic visualizations, it is not meant to be a comprehensive analysis. Instead, the main objective is to make the data freely available for further research and investigation. The project serves as a starting point for further examination of this important and complex issue. I would be happy to see if somebody could use this data in a meaningful way. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
